<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王显朋de博客</title>
  <subtitle>do something...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xanpen.github.io/"/>
  <updated>2017-08-22T10:09:33.000Z</updated>
  <id>http://xanpen.github.io/</id>
  
  <author>
    <name>王显朋</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>非技术人员如何理解机器学习</title>
    <link href="http://xanpen.github.io/2017/08/22/%E9%9D%9E%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    <id>http://xanpen.github.io/2017/08/22/非技术人员如何理解机器学习/</id>
    <published>2017-08-22T00:08:24.000Z</published>
    <updated>2017-08-22T10:09:33.000Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --></p>
<h3 id="什么是机器学习？"><a href="#什么是机器学习？" class="headerlink" title="什么是机器学习？"></a>什么是机器学习？</h3><p>机器学习(Machine Learning 简写：ML)是一个利用计算机科学和统计学原理来创建统计模型的研究领域。而该统计模型通常被用来做两件事情：</p>
<ol>
<li><strong>预测</strong>：依据历史数据对未来做出预测。</li>
<li><strong>推断</strong>：依据历史数据发现规律或者说是某种模式。</li>
</ol>
<p><strong>ML和AI（人工智能）之间的不同之处：</strong> 然后他们之间并没有被普遍认同的区别。通常来说，AI更通俗，更面向大众，专注于通过程式帮助人们做出决断或者决策；而ML则更面向数据科学家或者说开发者，专注于对未来做出预测。他们之间本来就是紧密相连的，从非技术角度，你甚至可以认为他们是等同的。</p>
<h3 id="什么是统计模型？"><a href="#什么是统计模型？" class="headerlink" title="什么是统计模型？"></a>什么是统计模型？</h3><p>训练计算机做出预测涉及将<strong>数据</strong>提供给机器学习模型，以此来模拟真实世界是如何运作的。如果存在一种真实世界里以特定方式运作的统计模型（比如说，个子高的人比个子矮的人挣的钱多。真实世界里，这可能并不是一个事实，在此，你权且认为真实世界里就是如此），然后呢，我们的统计模型它就能够预测出在身高5英尺2英寸的凯西和5英尺9英寸的吉尔中，谁能挣更多的钱。</p>
<p>那么一个实际意义上的模型到底长什么样子呢？仅仅在抽象层面上了解其概念和意义这才刚战斗到一半，你也应该去了解模型在计算机中到底是如何表示的，又或者倘若你把它写到纸上那它又将是什么样子的呢。</p>
<p>一个模型其实就是一个数学意义上的函数，就像你已经知道的，它描述了一组输入和一组输出的关系。下面是一个例子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f(x) = x²</div></pre></td></tr></table></figure>
<p>这是一个以一个数字作为输入，然后返回该数字的平方的函数。如，f(1) = 1, f(2) = 4, f(3) = 9.</p>
<p>让我们先回到，上面我们所提到的，根据身高预测收入的模型例子中，假如我们相信一个给定的人的年收入平均来说等于他/她的身高（单位：英寸）乘以1000（系数）。那么，如果你身高60英寸，我们猜测您年薪大概60000美元；同样如果高72英寸，我们认为您年薪72000美元。</p>
<p>这个模型的数学表示如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">收入（美元） = 身高（英寸） * 1000</div></pre></td></tr></table></figure>
<p>换句话说，就是收入是身高的函数。</p>
<blockquote>
<p><strong>要点：</strong> 机器学习指的是一套依靠大数据集合（例如身高与其对应的输入）具有估算功能（例如上面例子涉及到的收入）的技术或者方法。这种估算的能力，我们称之为模型，能够被用来估算未来数据的模型！</p>
</blockquote>
<p><strong>算法：</strong> 估算能力的背后是算法。一个算法是由一组预定义的步骤，一堆作为输入的数据集和一些数学运算变换。 你可以把它简单类比成食谱–首先倒上油，然后放上葱花，在然后如何如何…最后完成。</p>
<p>基本上所有类型的机器学习都是用模型和算法作为其一砖一瓦去预测和推断这个世界！！</p>
<p>接下来比较重要的来了，我们将一个组件一个组件的拆开来观察机器学习实际上是如何工作的。</p>
<h3 id="了解机器学习的框架"><a href="#了解机器学习的框架" class="headerlink" title="了解机器学习的框架"></a>了解机器学习的框架</h3><p><strong>输入</strong> 统计模型从过去的，结构化的数据表（称为训练数据）学习和训练。这些数据集–就像你所熟悉的Excel表格中的数据一样，以一种结构化的更容易理解的组织方式：数据集中的每一行代表一条个人的<strong>观察数据</strong>，也叫做一个<strong>基准</strong>或者一个<strong>测量</strong>，每一个列代表这个观察数据的一个不同的特征，也叫做一个<strong>预测器</strong>。别害怕，术语都是纸老虎！</p>
<p>例如，你可以想象一个有关人的数据集，其中每一行代表一个不同的人，行中的每一个列代表这个人的一个不同的特征：身高，体重，年龄，收入等等。</p>
<p>大多数传统的模型都支持上面我们所提到的这种格式的数据集，我们称其为结构化数据。</p>
<p>因为机器学习的普遍目标是预测和推断（例如，预测某人年薪），而训练数据有可能包含你想要预测的字段，这种特征称之为<strong>响应变量</strong>（或者<strong>输出变量</strong>，又或者<strong>因变量</strong>）他们看起来和其他特征或者字段是一样的。</p>
<p>大多数普通的统计模型都是采用一种叫做<strong>监督学习</strong>的技术方式，这种方式使用包含<strong>响应变量</strong>的数据集来做出预测和推断。同时还有许多机器学习被归为<strong>非监督学习</strong>方式，它并不要求包含一个响应变量，通常仅仅是在变量之间发现一些想要的规律或者模式（这种寻找规律或者模式的过程被叫做<strong>推断</strong>）。这种方式和监督学习的方式一样重要，只不过它一般不是很容易理解而且实践中也比较少见。这里呢，我们不对后者做深入讨论。从这个段落中，您只是简单的了解到存在两种机器学习类型就可以了，其次就是<strong>监督学习</strong>更普遍一些罢了。</p>
<p>继续回到我们关于”人”的例子中来，我们可能尝试去根据某些人的名字，年龄，和身高去预测他们的收入，然后我们的<strong>训练数据集</strong>大概如下：</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-1.png" title="结构化数据实例，每一行代表一个人（我们收集的一个独特的数据观察，每一列表示那个人的一个不同的特征预测器)" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-1.png" alt="结构化数据实例，每一行代表一个人（我们收集的一个独特的数据观察，每一列表示那个人的一个不同的特征预测器)"></a><span class="caption">结构化数据实例，每一行代表一个人（我们收集的一个独特的数据观察，每一列表示那个人的一个不同的特征预测器)</span></div><div style="clear:both;"></div>
<p>现在我们有了数据集，可以开始构建这个统计模型了。</p>
<p>但是为什么我们要这样做的？这是因为我们猜测或者假设在我们的<strong>预测器</strong>和我们的预测结果–也就是收入之间存在着某种关系，有可能相关于你的年龄，你的身高，或者二者的结合。事实上我们也有理由相信随着你年龄的增大你回挣更多的钱，而你的身高呢，或许可能在微妙的影响着你的工作前途。</p>
<p>我们将把这个找出确切或者具体关系（例如，年龄确实是影响你收入的一个具体因素）的任务交给机器学习和算法来完成。</p>
<p><strong>模型的选择：</strong> 我们有了数据集，也了解了在我们的<strong>预测器</strong>和推测结果之间可能存在一个关系。我们可以准备去预测未来了哈。</p>
<p>另外，事实上，我们没有必要去了解在这些变量之间是否存在某种关系。我们只要把所有的数据交给算法然后去观察模型是否能做出一些有意义的推测。</p>
<p>现在我们需要选择使用哪种模型。一般来说，存在很多种类型的模型，他们解释了数据实际上是怎么工作的。而我们选择了一种最能反应<strong>预测器</strong>和响应结果的这种关系的模型。</p>
<p>模型通常属于下面两种类型之一：</p>
<ol>
<li><strong>回归模型</strong>，这种模型中，<strong>因变量</strong>也就是<strong>响应变量</strong>是连续的，例如，身高，年龄和收入都是连续的。也就是说他们在一个区间内可以任意取值。比如身高一米和两米之间你可以随便取值，永远不会断开。</li>
<li><strong>分类模型</strong>，用于分类数据，也就是说数据是离散的。例如，你想要根据花的照片来预测其品种，又或者你想预测一个大学生是生物专业的还是数学专业的。</li>
</ol>
<p>选择一个模型的第一步就是去观察你的因变量或者响应变量是连续的还是离散的。</p>
<p>下面，我将分别带你了解这两种类型中的比较流行的，强大的，相对简单的模型。</p>
<h3 id="常见的回归模型：线性回归"><a href="#常见的回归模型：线性回归" class="headerlink" title="常见的回归模型：线性回归"></a>常见的回归模型：线性回归</h3><p>在过去不自知的情况下，你可能已经构建过很多简单线性回归模型。再次申明，一个模型就是一个数学函数，它描述了输入输出之间的关系。</p>
<p>一个简单的线性回归模型没有什么两样，我们可以描述一个普通案例如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">y = m × X + b</div></pre></td></tr></table></figure>
<p>上面的等式关联了一个点的y的值到它的X的值上。如果我们知道这个X的值，我们能够通过用X乘以m（称为斜率）加上b（称为截距）来得到y的值。</p>
<p>如果你认为在你的<strong>预测器</strong>和结果之间–也就是身高和收入之间存在一个线性关系，那么你可能更倾向于使用一个线性回归模型。话句话说，如果你认为你能够把身高和收入之间的关系用一条直线来描述，那么这个模型应该就是你的理性模型。</p>
<p>下面是一些为线性回归模型准备的结构化了的训练数据：</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-2.png" title="" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-2.png" alt=""></a></div><div style="clear:both;"></div>
<p>…你决定你将要基于某些人的身高去构建一个数据模型来预测他们的收入。说明一下，因为我们要简单化，所以只考虑身高这一个因素。</p>
<p>首先，你需要在XY-坐标系中绘出这些变量的点，以观察他们的关系。下面是身高-年收入的散点图。每一个蓝色的点都是一个独立的<strong>观察数据</strong>或者基准。</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-3.png" title="" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-3.png" alt=""></a></div><div style="clear:both;"></div>
<p>不难看出，通过这些蓝色的点看起来貌似一条直线更能准确的反应我们所观察到的这种关系。而这条直线当然可以被描述成那个上文中我提到过的函数：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">y = m × X + b</div></pre></td></tr></table></figure>
<p>现在呢，我想要构建一个线性回归模型。如何构建的？我开始用我的数据集训练我的模型，过程中这个线性回归算法（这个的细节就复杂的多了，你就认为是一个魔术盒子吧）回去估算m和b的值，最后提供给我们这个直线的等式，以此我们用来预测。</p>
<p><strong>让我们慢下来，思考一下人生：</strong> 我们知道一个模型的训练和学习是通过训练数据和神奇的算法。但是如果我们的训练数据不具代表性或者比较极端又或者根本就是错误的，那将会发生什么呢？</p>
<p>模型是不知道训练数据是不是”好的”–这取决于训练模型的人。”不好的”训练数据可能会导致偏见性的预测，并且这种偏见性会继续递归的”偏见”下去。</p>
<p>例如，试想一个用于刑事司法系统的模型，提供给该模型的训练数据对非裔美国人是带有偏见性的。那毋庸置疑，这个模型的预测结果将会彰显这种偏见！</p>
<p>线性回归算法的细节在这里是完全不重要的，但你需要知道的是这个算法并不是凭空臆造的。它应用了你的训练数据，并且采用了数学上的线性代数原理，最终回馈给我们一条”最优”可能性的直线。其实是它帮我们确定了m和b的值。</p>
<p>下图是：线性回归线（红色）和真实数据（蓝色）</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-4.png" title="" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-4.png" alt=""></a></div><div style="clear:both;"></div>
<p>到目前为止，线性回归模型可以写成如下的样子：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Income = $989 × Height + $30,687</div></pre></td></tr></table></figure>
<p>这个模型预示着你每增长一英寸，你就可能每年多挣至少989美元的钱，想象就激动呢，走上人生巅峰指日可待！</p>
<p><strong>继续思考：</strong> 正确的去解释这些参数是及其重要的。在这里，我们得到的是身高和收入之间的一个”关联”，而非一个因果关系。长得高并不直接导致你的收入增长，当然长得高确实通常意味着人们对你更加的尊重（至少西方文化是这样的），也可能会让你在工作面试和薪资谈判中更具优势，进而间接提高你的收入。</p>
<blockquote>
<p>上面的例子让我们对机器学习有了一个更近一步的认识：它不是魔术戏法儿。它也不没有发现我们周围世界里的基本真理。相对而言，它告诉了我们这些特定的变量–就像身高和收入–的相互关联。</p>
</blockquote>
<p>我们现在已经对机器学习中的学习有了足够的了解。许多模型，包括线性回归模型，都有一些参数–也是一些变量（例如:y = m × X + b中的m和b），它们是算法通过输入训练数据估算得到的，而这个过程称之为：训练。</p>
<p>在我们的例子中，通过执行线性回归算法，模型估算出了m为：$989，b为：$30,687。</p>
<p><strong>评价函数</strong> 你可能存在疑问：我怎么知道这条线就是客观意义上最优的线？擦，相当尖锐的问题！就喜欢你这种提问题的姿势。但是！这个问题确实没有一个普遍被认同或者接受的答案给你！哎呦不错哦，保持姿势哦~</p>
<p>当然，最优，最好都是相对而言。我们已经确定了我们”最好”的线使它在测试数据上的R²（决定系数）达到最大，R²是我们通过对我们的结果执行评价函数而得来的。</p>
<p>一个评价函数仅仅就是一种确定我们的预测的好坏程度的方法。在实践中这种计算方式是通过训练数据训练模型，不过要保留一部分数据（称为测试数据）用户评价函数。</p>
<p>一旦你的模型被训练完成，你就可以先不看你的测试数据的因变量（也就是收入）然后通过你的模型运行你保留的测试数据，然后得到一系列预测结果。最后你用预测结果和测试数据因变量的真实值去比较，并且利用评价函数对你的预测结果给予一个确切的判定。</p>
<p>R²是一个非常常见的针对回归模型的判定函数，虽然这已经涉及到统计学的一些知识，不过我们还是可以这样描述它为：用我们的预测器（例如：身高）能够解释我们的响应结果（例如：收入）的变动程度（统计学方差类衡量）</p>
<p>如果R²=1，我们只通过观察升高就可以解释收入的全部变动。也就意味着在测试数据中身高是收入的一个完美预测器。换句话说，在测试数据中，我们仅利用某些人的身高信息就能够对他们的收入做出完美的，准确的预测。</p>
<p><strong>思考：</strong> 是不是R²=1就预示着我们总是能够通过一个给定的身高就完美的预测他们的收入？<strong>事实并不是这样的。</strong></p>
<p>我们依靠训练数据训练我们的模型并且预测测试数据的响应结果而得到R²=1.然后我们比较我们的预测值和测试数据的响应变量的真实值。关于机器学习模型的有效性，这些说明了什么呢？</p>
<p>他告诉我们，机器学习模型它学习的是过去，并且它隐形假设未来将与过去表现相似。但当未来发生了改变–当管理员注入了带有偏见性的数据，那么身高和收入之间的关系消失了，最终模型失效了。</p>
<p>更常见的是，在一开始就应用了带有偏见性数据，这可能将无法准确的代表我们正尝试着去衡量的现象。为了利用身高预测收入而构建一个训练数据集的时候，我们可能更倾向于只从西方国家收集数据。这个模型是否适合于东方国家，因为实际上我们没有该地域的训练数据，或许答案是否定的。</p>
<p>这里对应用到刑事司法系统上的学习系统有个很大的启示，例如，我们训练模型使用的是过去的数据，所以理所当然的，我们就应该记得去问：模型多久使用新的训练数据更新一次呢？</p>
<p>我们还应该问到：训练数据是不是足够全面呢？如果我们的模型不包含60英寸以下的这样的训练数据，那对那些比我们训练数据中任何人都矮的人们做出的预测是否是公平或者准确的呢？</p>
<p>如果R²=0，我们就不能根据身高去解释收入的任何变动。这意味着训练集中的身高没有告诉我们任何关于收入的东西，也就是说，它是一个毫无价值的预测器。</p>
<p>这一切都意味着一点，大的R²值比小的R²值好。在机器学习的术语中，一个R²大的模型比一个R²值小的模型更具预测性。</p>
<p>我们也可以使用除R²之外方式去评估我们的模型，这可能会导致我们的红线看起来有些许不同。事实上，在医学领域，我们可能就不那么关心最高R²值得那条线了。</p>
<h3 id="常见的分类模型：KNN"><a href="#常见的分类模型：KNN" class="headerlink" title="常见的分类模型：KNN"></a>常见的分类模型：KNN</h3><p>K-近邻：KNN是一种强大的分类算法。</p>
<p>接下来，我们从一个例子开始。让我们想象一下，我们正在和政府签订一个合同，而工作内容是，我们需要创建和维护一份美国的哪块土地是肥沃的哪块土地是贫瘠的，这样的一份数据。这份数据可以帮助政策制定者如何管理珍贵的自然资源。</p>
<p>而你们团队的成员已经在卫星图上手动标出了几百个经纬度坐标点，它们有的是代表肥沃的，有的代表不肥沃的。你的目标就是训练一个分类模型，当它引入一个经纬度坐标点（测试点）数据时，能够预测该点代表的这块土地是不是肥沃的。</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-5.png" title="" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-5.png" alt=""></a></div><div style="clear:both;"></div>
<p>解决这个问题的最直观的方式之一就是去观察测试点邻近的点。例如下图黑色测试单周围的点。</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-6.png" title="" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-6.png" alt=""></a></div><div style="clear:both;"></div>
<p>我们想要这个坐标点是代表肥沃的地区还是贫瘠的地区。为了到达这个目标，我们选择了离它最近的三个点。这个三个点都被标记为贫瘠的，所以我们也就把测试点代表的区域分类为贫瘠地区。</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-7.png" title="" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-7.png" alt=""></a></div><div style="clear:both;"></div>
<p>现在我们知道为什么这个模型包含”近邻”这个词汇了吧–就是因为我们是根据已经被分好类的那些点来分类我们的测试点。但是K代表的什么的？很简单，K就是我们参考的临近点的数量。</p>
<p>如果K很小（例如：K=1）,当我们为测试点分类的时候我们只能观察和参考一个紧邻点。如果K比较大（例如:K=100），我们就可以观察和参考很大范围的近邻点来做出分类。</p>
<p>K值得选取往往要视当时的具体问题而定，事实上，数据科学家通常会尝试很多不同的K值来观察哪个K值更趋向最准确的分类。</p>
<p>注意K是一个模型参数，但它在模型训练学习当中并不是一个必要的参数，他是一个数据科学家明确指定的特殊参数，我们称它为<strong>超参数</strong>，数据额科学家为了决定使用哪个K值，通常会去尝试一堆的不同的k值，这个评估这些可能的超参数的过程称为调试。</p>
<p><strong>思考：</strong> 大多数的机器学习代码库运行期间，通常在数据科学家忘记显示的设置这些超参数是的时候会使用默认值。例如，如果你在代码中运行你的KNN模型的时候忘记了选择一个K值，软件会给出一个默认值，例如K=5.不过K值是很重要的，它对模型的预测结果又很大影响。</p>
<p>这里，你只要了解到一个分类模型是否被准确调试了，因为不然的话它可能不会很好的做出分类预测！</p>
<h3 id="最后，关于神经网络的简要讨论"><a href="#最后，关于神经网络的简要讨论" class="headerlink" title="最后，关于神经网络的简要讨论"></a>最后，关于神经网络的简要讨论</h3><p>本文的目标并非讨论机器学习模型在具体细节上市如果工作的。但是呢，神经网络对于非技术读者来说确实是很重要的，<br>因为它难以执行的强大，并且它正在几乎应用了机器学习的任何技术领域变得越来越普遍。</p>
<div class="figure center" style="width:;"><a class="fancybox" href="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-8.png" title="" data-fancybox-group="ml" target="_blank" rel="external"><img class="fig-img" src="http://ov2nxw2ly.bkt.clouddn.com/image/ml/ml-8.png" alt=""></a></div><div style="clear:both;"></div>
<p>神经网络是一个受生物学启发的模型，其中是相互连接的神经元（或者叫做节点）传送输入数据和输出数据。每一个节点在它接收到的数据上应用一个简单的数据变换；然后沿着它的路径把结果传递到下一个节点。</p>
<p>就像我们的大脑包含数亿计的神经元，神经网络一步包含数千或者数百万个这样的人工神经元。</p>
<p>每一个节点间的连接代表模型的一个不同参数。这就意味着，数百万个节点的神经网络可能有数十亿个参数与其相关联。</p>
<p>对神经网络的一个普遍印象就是，它很难解释，或者说你很难了解它内部到底发生了什么。这个印象源于神经网络有着太多的参数，而且大多数或者所有参数都是对训练数据进行复杂的组合和数学变换而确定的。虽然一个简单的线性回归仅有两个参数（m和b），但是一个神经网络却可能n多个参数，并且很难搞清楚它里面是怎么计算的。</p>
<p><strong>思考：</strong> 我们经常会在模型的可解释性和可预测能力上做出权衡。神经网络很强大，但是它几乎无法解释。另一方面，简单线性回归相当容易理解，但是它通常上不是那么强大。问题是我们无法解释这些参数，那么我们是不是应该相信复杂的神经网络的预测结果呢？</p>
<p>对于这些问题的回答显得至关重要。作为一般的经验法则，机器学习模型不得不在容易理解和更具预测力之间做出权衡。真正像神经网络这样强大的模型通常被称为<strong>黑盒</strong>因为我们不是十分确定它里面发生了什么，但是这些模型却可能极具预测力。</p>
<p>这种权衡一般要依照当前问题的领域而定。利用神经网络预测谁应该被放出狱可能是一个很糟的主意，因为对于神经网络做出的这样的一个预测，我们真的很难去精确的理解：为什么会这样？另一方面，使用一个简单线性回归算法同样也是不太合适的，因为它的预测力显得太弱了。</p>
<h3 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h3><p>人们趋向于把机器学习当做一种魔法，我希望从本文中你可以了解到事实不是这样的。假设这些模型（例如神经网络）是无所不知的，而且绝对可靠，可能回导致我们对其输出过于信任。了解建立模型有多少不同的组件可以让你更有机会看到模型输出中出现偏差和错误，所以这些输出在被信任之前应该给予足够的审视…</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人们趋向于把机器学习当做一种魔法，我希望从本文中你可以了解到事实不是这样的。假设这些模型（例如神经网络）是无所不知的，而且绝对可靠，可能回导致我们对其输出过于信任。了解建立模型有多少不同的组件可以让你…&lt;br&gt;
    
    </summary>
    
      <category term="人工智能" scheme="http://xanpen.github.io/categories/ai/"/>
    
    
      <category term="机器学习" scheme="http://xanpen.github.io/tags/ml/"/>
    
      <category term="人工智能" scheme="http://xanpen.github.io/tags/ai/"/>
    
  </entry>
  
</feed>
